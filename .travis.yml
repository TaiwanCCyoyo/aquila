language: cpp
# run on new infrastructure
sudo: false
cache:
  apt: true
  directories:
    $RISCV
  timeout: 1000

# required packages to install
dist: bionic
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-7
      - g++-7
      - gperf
      - autoconf
      - automake
      - autotools-dev
      - curl
      - python3
      - git
      - ca-certificates
      - libmpc-dev
      - libmpfr-dev
      - libgmp-dev
      - gawk
      - build-essential
      - bison
      - flex
      - texinfo
      - libusb-1.0-0-dev
      - gperf
      - libtool
      - patchutils
      - bc
      - libexpat-dev
      - zlib1g-dev
      - valgrind
      - verilator
env:
  global:
    - RISCV="/home/travis/riscv_install"

branches:
  only:
    - master

before_install:
  - export CXX=g++-7 CC=gcc-7
  # setup dependent paths
  - export PATH=$RISCV/bin:$VERILATOR_ROOT/bin:$PATH
  - export LIBRARY_PATH=$RISCV/lib
  - export LD_LIBRARY_PATH=$RISCV/lib
  - export C_INCLUDE_PATH=$RISCV/include
  - export CPLUS_INCLUDE_PATH=$RISCV/include
  # number of parallel jobs to use for make commands and simulation
  - export NUM_JOBS=1
  - git submodule update --init --recursive

stages:
  - checkout
  - compile1
  - build_model
  - test1
  - test2

jobs:
  include:
    - stage: checkout
      name: checkout gcc
      script:
        - verilate/ci/riscv_gcc_check.sh 0
    - stage: compile1
      name: build gcc
      script:
        - verilate/ci/riscv_gcc_check.sh 1
        - rm -rf $RISCV/riscv-gnu-toolchain
    - stage: build_model
      name: build verilator model
      script:
        - cd verilate
        - make core_verilate
    - stage: test
      name: run riscv ui-p
      script:
        - cd verilate/ci
        - ./run_rv_test.sh riscv32ui-p.list 0
    - stage: test
      name: run riscv um-p
      script:
        - cd verilate/ci
        - ./run_rv_test.sh riscv32um-p.list 0
install: travis_wait
